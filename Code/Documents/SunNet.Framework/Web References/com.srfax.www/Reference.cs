//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace SF.Framework.com.srfax.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SRFaxWebServicesBinding", Namespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Array))]
    public partial class SRFaxWebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Get_Fax_InboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Fax_OutboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_FaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Queue_FaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Queue_Fax_WROperationCompleted;
        
        private System.Threading.SendOrPostCallback Retrieve_FaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_FaxStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SRFaxWebServices() {
            this.Url = global::SF.Framework.Properties.Settings.Default.SF_Framework_com_srfax_www_SRFaxWebServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Get_Fax_InboxCompletedEventHandler Get_Fax_InboxCompleted;
        
        /// <remarks/>
        public event Get_Fax_OutboxCompletedEventHandler Get_Fax_OutboxCompleted;
        
        /// <remarks/>
        public event Delete_FaxCompletedEventHandler Delete_FaxCompleted;
        
        /// <remarks/>
        public event Queue_FaxCompletedEventHandler Queue_FaxCompleted;
        
        /// <remarks/>
        public event Queue_Fax_WRCompletedEventHandler Queue_Fax_WRCompleted;
        
        /// <remarks/>
        public event Retrieve_FaxCompletedEventHandler Retrieve_FaxCompleted;
        
        /// <remarks/>
        public event Get_FaxStatusCompletedEventHandler Get_FaxStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Get_Fax_Inbox", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Get_Fax_Inbox([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sPeriod, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out InboundFaxes Result) {
            object[] results = this.Invoke("Get_Fax_Inbox", new object[] {
                        access_id,
                        access_pwd,
                        sPeriod});
            Result = ((InboundFaxes)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Fax_InboxAsync(string access_id, string access_pwd, string sPeriod) {
            this.Get_Fax_InboxAsync(access_id, access_pwd, sPeriod, null);
        }
        
        /// <remarks/>
        public void Get_Fax_InboxAsync(string access_id, string access_pwd, string sPeriod, object userState) {
            if ((this.Get_Fax_InboxOperationCompleted == null)) {
                this.Get_Fax_InboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Fax_InboxOperationCompleted);
            }
            this.InvokeAsync("Get_Fax_Inbox", new object[] {
                        access_id,
                        access_pwd,
                        sPeriod}, this.Get_Fax_InboxOperationCompleted, userState);
        }
        
        private void OnGet_Fax_InboxOperationCompleted(object arg) {
            if ((this.Get_Fax_InboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Fax_InboxCompleted(this, new Get_Fax_InboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Get_Fax_Outbox", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Get_Fax_Outbox([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sPeriod, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OutboundFaxes Result) {
            object[] results = this.Invoke("Get_Fax_Outbox", new object[] {
                        access_id,
                        access_pwd,
                        sPeriod});
            Result = ((OutboundFaxes)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Fax_OutboxAsync(string access_id, string access_pwd, string sPeriod) {
            this.Get_Fax_OutboxAsync(access_id, access_pwd, sPeriod, null);
        }
        
        /// <remarks/>
        public void Get_Fax_OutboxAsync(string access_id, string access_pwd, string sPeriod, object userState) {
            if ((this.Get_Fax_OutboxOperationCompleted == null)) {
                this.Get_Fax_OutboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Fax_OutboxOperationCompleted);
            }
            this.InvokeAsync("Get_Fax_Outbox", new object[] {
                        access_id,
                        access_pwd,
                        sPeriod}, this.Get_Fax_OutboxOperationCompleted, userState);
        }
        
        private void OnGet_Fax_OutboxOperationCompleted(object arg) {
            if ((this.Get_Fax_OutboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Fax_OutboxCompleted(this, new Get_Fax_OutboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Delete_Fax", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Delete_Fax([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sDirection, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string Result) {
            object[] results = this.Invoke("Delete_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sDirection,
                        sFileName1,
                        sFileName2,
                        sFileName3,
                        sFileName4,
                        sFileName5});
            Result = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_FaxAsync(string access_id, string access_pwd, string sDirection, string sFileName1, string sFileName2, string sFileName3, string sFileName4, string sFileName5) {
            this.Delete_FaxAsync(access_id, access_pwd, sDirection, sFileName1, sFileName2, sFileName3, sFileName4, sFileName5, null);
        }
        
        /// <remarks/>
        public void Delete_FaxAsync(string access_id, string access_pwd, string sDirection, string sFileName1, string sFileName2, string sFileName3, string sFileName4, string sFileName5, object userState) {
            if ((this.Delete_FaxOperationCompleted == null)) {
                this.Delete_FaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_FaxOperationCompleted);
            }
            this.InvokeAsync("Delete_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sDirection,
                        sFileName1,
                        sFileName2,
                        sFileName3,
                        sFileName4,
                        sFileName5}, this.Delete_FaxOperationCompleted, userState);
        }
        
        private void OnDelete_FaxOperationCompleted(object arg) {
            if ((this.Delete_FaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_FaxCompleted(this, new Delete_FaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Queue_Fax", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Queue_Fax(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sCallerID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sSenderEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFaxType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sToFaxNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sAccountCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string Result) {
            object[] results = this.Invoke("Queue_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sCallerID,
                        sSenderEmail,
                        sFaxType,
                        sToFaxNumber,
                        sAccountCode,
                        sFileName_1,
                        sFileContent_1,
                        sFileName_2,
                        sFileContent_2,
                        sFileName_3,
                        sFileContent_3,
                        sFileName_4,
                        sFileContent_4,
                        sFileName_5,
                        sFileContent_5});
            Result = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Queue_FaxAsync(
                    string access_id, 
                    string access_pwd, 
                    string sCallerID, 
                    string sSenderEmail, 
                    string sFaxType, 
                    string sToFaxNumber, 
                    string sAccountCode, 
                    string sFileName_1, 
                    string sFileContent_1, 
                    string sFileName_2, 
                    string sFileContent_2, 
                    string sFileName_3, 
                    string sFileContent_3, 
                    string sFileName_4, 
                    string sFileContent_4, 
                    string sFileName_5, 
                    string sFileContent_5) {
            this.Queue_FaxAsync(access_id, access_pwd, sCallerID, sSenderEmail, sFaxType, sToFaxNumber, sAccountCode, sFileName_1, sFileContent_1, sFileName_2, sFileContent_2, sFileName_3, sFileContent_3, sFileName_4, sFileContent_4, sFileName_5, sFileContent_5, null);
        }
        
        /// <remarks/>
        public void Queue_FaxAsync(
                    string access_id, 
                    string access_pwd, 
                    string sCallerID, 
                    string sSenderEmail, 
                    string sFaxType, 
                    string sToFaxNumber, 
                    string sAccountCode, 
                    string sFileName_1, 
                    string sFileContent_1, 
                    string sFileName_2, 
                    string sFileContent_2, 
                    string sFileName_3, 
                    string sFileContent_3, 
                    string sFileName_4, 
                    string sFileContent_4, 
                    string sFileName_5, 
                    string sFileContent_5, 
                    object userState) {
            if ((this.Queue_FaxOperationCompleted == null)) {
                this.Queue_FaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueue_FaxOperationCompleted);
            }
            this.InvokeAsync("Queue_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sCallerID,
                        sSenderEmail,
                        sFaxType,
                        sToFaxNumber,
                        sAccountCode,
                        sFileName_1,
                        sFileContent_1,
                        sFileName_2,
                        sFileContent_2,
                        sFileName_3,
                        sFileContent_3,
                        sFileName_4,
                        sFileContent_4,
                        sFileName_5,
                        sFileContent_5}, this.Queue_FaxOperationCompleted, userState);
        }
        
        private void OnQueue_FaxOperationCompleted(object arg) {
            if ((this.Queue_FaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Queue_FaxCompleted(this, new Queue_FaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Queue_Fax_WR", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Queue_Fax_WR(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sCallerID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sSenderEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFaxType, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sToFaxNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sAccountCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sRetries, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileName_5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFileContent_5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string Result) {
            object[] results = this.Invoke("Queue_Fax_WR", new object[] {
                        access_id,
                        access_pwd,
                        sCallerID,
                        sSenderEmail,
                        sFaxType,
                        sToFaxNumber,
                        sAccountCode,
                        sRetries,
                        sFileName_1,
                        sFileContent_1,
                        sFileName_2,
                        sFileContent_2,
                        sFileName_3,
                        sFileContent_3,
                        sFileName_4,
                        sFileContent_4,
                        sFileName_5,
                        sFileContent_5});
            Result = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Queue_Fax_WRAsync(
                    string access_id, 
                    string access_pwd, 
                    string sCallerID, 
                    string sSenderEmail, 
                    string sFaxType, 
                    string sToFaxNumber, 
                    string sAccountCode, 
                    string sRetries, 
                    string sFileName_1, 
                    string sFileContent_1, 
                    string sFileName_2, 
                    string sFileContent_2, 
                    string sFileName_3, 
                    string sFileContent_3, 
                    string sFileName_4, 
                    string sFileContent_4, 
                    string sFileName_5, 
                    string sFileContent_5) {
            this.Queue_Fax_WRAsync(access_id, access_pwd, sCallerID, sSenderEmail, sFaxType, sToFaxNumber, sAccountCode, sRetries, sFileName_1, sFileContent_1, sFileName_2, sFileContent_2, sFileName_3, sFileContent_3, sFileName_4, sFileContent_4, sFileName_5, sFileContent_5, null);
        }
        
        /// <remarks/>
        public void Queue_Fax_WRAsync(
                    string access_id, 
                    string access_pwd, 
                    string sCallerID, 
                    string sSenderEmail, 
                    string sFaxType, 
                    string sToFaxNumber, 
                    string sAccountCode, 
                    string sRetries, 
                    string sFileName_1, 
                    string sFileContent_1, 
                    string sFileName_2, 
                    string sFileContent_2, 
                    string sFileName_3, 
                    string sFileContent_3, 
                    string sFileName_4, 
                    string sFileContent_4, 
                    string sFileName_5, 
                    string sFileContent_5, 
                    object userState) {
            if ((this.Queue_Fax_WROperationCompleted == null)) {
                this.Queue_Fax_WROperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueue_Fax_WROperationCompleted);
            }
            this.InvokeAsync("Queue_Fax_WR", new object[] {
                        access_id,
                        access_pwd,
                        sCallerID,
                        sSenderEmail,
                        sFaxType,
                        sToFaxNumber,
                        sAccountCode,
                        sRetries,
                        sFileName_1,
                        sFileContent_1,
                        sFileName_2,
                        sFileContent_2,
                        sFileName_3,
                        sFileContent_3,
                        sFileName_4,
                        sFileContent_4,
                        sFileName_5,
                        sFileContent_5}, this.Queue_Fax_WROperationCompleted, userState);
        }
        
        private void OnQueue_Fax_WROperationCompleted(object arg) {
            if ((this.Queue_Fax_WRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Queue_Fax_WRCompleted(this, new Queue_Fax_WRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Retrieve_Fax", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Retrieve_Fax([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFaxFileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sDirection, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFaxFormat, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string Result) {
            object[] results = this.Invoke("Retrieve_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sFaxFileName,
                        sDirection,
                        sFaxFormat});
            Result = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Retrieve_FaxAsync(string access_id, string access_pwd, string sFaxFileName, string sDirection, string sFaxFormat) {
            this.Retrieve_FaxAsync(access_id, access_pwd, sFaxFileName, sDirection, sFaxFormat, null);
        }
        
        /// <remarks/>
        public void Retrieve_FaxAsync(string access_id, string access_pwd, string sFaxFileName, string sDirection, string sFaxFormat, object userState) {
            if ((this.Retrieve_FaxOperationCompleted == null)) {
                this.Retrieve_FaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieve_FaxOperationCompleted);
            }
            this.InvokeAsync("Retrieve_Fax", new object[] {
                        access_id,
                        access_pwd,
                        sFaxFileName,
                        sDirection,
                        sFaxFormat}, this.Retrieve_FaxOperationCompleted, userState);
        }
        
        private void OnRetrieve_FaxOperationCompleted(object arg) {
            if ((this.Retrieve_FaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retrieve_FaxCompleted(this, new Retrieve_FaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.srfax.com/SRF_UserFaxWebSrv_doc.php#Get_FaxStatus", RequestNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", ResponseNamespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Get_FaxStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_id, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string access_pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sFaxDetailID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out FaxesStatus Result) {
            object[] results = this.Invoke("Get_FaxStatus", new object[] {
                        access_id,
                        access_pwd,
                        sFaxDetailID});
            Result = ((FaxesStatus)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_FaxStatusAsync(string access_id, string access_pwd, string sFaxDetailID) {
            this.Get_FaxStatusAsync(access_id, access_pwd, sFaxDetailID, null);
        }
        
        /// <remarks/>
        public void Get_FaxStatusAsync(string access_id, string access_pwd, string sFaxDetailID, object userState) {
            if ((this.Get_FaxStatusOperationCompleted == null)) {
                this.Get_FaxStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_FaxStatusOperationCompleted);
            }
            this.InvokeAsync("Get_FaxStatus", new object[] {
                        access_id,
                        access_pwd,
                        sFaxDetailID}, this.Get_FaxStatusOperationCompleted, userState);
        }
        
        private void OnGet_FaxStatusOperationCompleted(object arg) {
            if ((this.Get_FaxStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_FaxStatusCompleted(this, new Get_FaxStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php")]
    public partial class InboundFaxes : Array {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FaxesStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDRS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutboundFaxes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InboundFaxes))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.xmlsoap.org/soap/encoding/")]
    public partial class Array {
        
        private System.Xml.XmlElement[] anyField;
        
        private string arrayTypeField;
        
        private string offsetField;
        
        private bool offsetFieldSpecified;
        
        private string idField;
        
        private string hrefField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string arrayType {
            get {
                return this.arrayTypeField;
            }
            set {
                this.arrayTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="ID")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                this.hrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php")]
    public partial class FaxesStatus : Array {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php")]
    public partial class CDRS : Array {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1015")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.srfax.com/SRF_UserFaxWebSrv_doc.php")]
    public partial class OutboundFaxes : Array {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_Fax_InboxCompletedEventHandler(object sender, Get_Fax_InboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Fax_InboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Fax_InboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public InboundFaxes Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InboundFaxes)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_Fax_OutboxCompletedEventHandler(object sender, Get_Fax_OutboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Fax_OutboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Fax_OutboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public OutboundFaxes Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutboundFaxes)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Delete_FaxCompletedEventHandler(object sender, Delete_FaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_FaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_FaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Queue_FaxCompletedEventHandler(object sender, Queue_FaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Queue_FaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Queue_FaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Queue_Fax_WRCompletedEventHandler(object sender, Queue_Fax_WRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Queue_Fax_WRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Queue_Fax_WRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Retrieve_FaxCompletedEventHandler(object sender, Retrieve_FaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retrieve_FaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retrieve_FaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_FaxStatusCompletedEventHandler(object sender, Get_FaxStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_FaxStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_FaxStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public FaxesStatus Result1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FaxesStatus)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591